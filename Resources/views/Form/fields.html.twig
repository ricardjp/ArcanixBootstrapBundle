{% extends 'form_div_layout.html.twig' %}

{# Form #}

{# Adding form legend to form rendering #}
{% block form %}
    {{ form_start(form) }}
    {{ block('form_legend') }}
    {{ form_widget(form) }}
    {{ form_end(form) }}
{% endblock %}

{# Rendering legend only if specified #}
{% block form_legend %}
{% spaceless %}
    {% if legend is not empty %}
        <legend>{{ legend|trans({}, translation_domain) }}</legend>
    {% endif %}
{% endspaceless %}
{% endblock form_legend %}
        
{# Redefined only to pass "layout" as argument #}
{% block form_rows %}
{% spaceless %}
    {% for child in form %}
        {{ form_row(child, { 'layout' : layout }) }}
    {% endfor %}
{% endspaceless %}
{% endblock form_rows %}
        
{% block form_row %}
{% spaceless %}
    {{ block('form_row_start') }}
    {% set show_horizontal_wrapper = layout.formLayout == 'horizontal' and not (form.parent is not null and 'collection' in form.parent.vars.block_prefixes) %}
    {% if show_horizontal_wrapper %}
        {% set wrapper_class = layout.horizontalInputWrapperClass ~ ('collection' in form.vars.block_prefixes ? ' row': '') %}
        <div class="{{ wrapper_class }}">
    {% endif %}
            
    {{ form_widget(form, { 'layout': layout }) }}

    {% if show_horizontal_wrapper %}
        </div>
    {% endif %}
    {{ block('form_row_end') }}
{% endspaceless %}
{% endblock form_row %}
        
{% block form_row_start %}
{% spaceless %}
    {% set row_attr_class = 'form-group' %}
    {% if form.parent is not null and 'collection' in form.parent.vars.block_prefixes %}
        {% set row_attr_class = row_attr_class ~ ' collection-item clearfix' %}
    {% endif %}
    {% if errors|length > 0 %}
        {% set row_attr_class = row_attr_class ~ ' has-error' %}
    {% endif %}
    <div class="{{ row_attr_class }}">
    {{ form_label(form, label|default(null), { 'layout': layout }) }}
{% endspaceless %}
{% endblock form_row_start %}

{% block form_row_end %}
{% spaceless %}
    </div>
{% endspaceless %}
{% endblock form_row_end %}

{# Buttons #}
        
{# Adding bootstrap "btn" class to buttons #}
{% block button_attributes %}
    {% set attr = attr|merge({class: 'btn ' ~ attr.class | default("")}) %}
    {{ parent() }}
{% endblock button_attributes %}

{# Widgets #}
{% block choice_widget_collapsed %}
    {% set attr = attr|merge({'class': attr.class|default('') ~ ' form-control'}) %}
    {{ parent() }}
    {{ block('form_message') }}
{% endblock choice_widget_collapsed %}
       
{% block textarea_widget %}
{% spaceless %}
    {% if not attr.placeholder|default and layout.formLayout == 'inline' %}
        {% set attr = attr|merge({ 'placeholder': label is not sameas(false) and label is empty ? name|humanize : label|trans({}, translation_domain)}) %}
    {% endif %}
    {% set attr = attr|merge({'class': attr.class|default('') ~ ' form-control'}) %}
    {{ parent() }}
    {{ block('form_message') }}
{% endspaceless %}
{% endblock textarea_widget %}
    
{% block form_widget_simple %}
{% spaceless %}
    {{ block("form_widget_start") }}
        
    {% if not attr.placeholder|default and layout.formLayout == 'inline' %}
        {% set attr = attr|merge({ 'placeholder': label is not sameas(false) and label is empty ? name|humanize : label|trans({}, translation_domain)}) %}
    {% endif %}
        
    {% set attr = attr|merge({'class': attr.class|default('') ~ ' form-control'}) %}
        
    {% if 'collection' in form.parent.vars.block_prefixes and layout.formLayout == 'horizontal'  %}
        <div class="{{ layout.horizontalInputWrapperClass }}">
    {% endif %}

    {{ parent() }}

    {% if 'collection' in form.parent.vars.block_prefixes and layout.formLayout == 'horizontal'  %}
        </div>
    {% endif %}

    {{ block("form_widget_end") }}
    {{ block('form_message') }}
{% endspaceless %}
{% endblock form_widget_simple %}

{% block form_widget_compound %}
{% spaceless %}
    <div {{ block('widget_container_attributes') }}>
        {% if form.parent is empty %}
            {{ form_errors(form) }}
        {% endif %}
        {{ block('form_rows') }}
        {{ form_rest(form, { 'layout': layout }) }}
    </div>
{% endspaceless %}
{% endblock form_widget_compound %}
        
{% block form_widget_start %}
{% spaceless %}
    {% if type|default != 'hidden' and (prefix|default or suffix|default) %}
        <div class="input-group">
            {% if prefix|default %}
                {{ block('input_prepend') }}
            {% endif %}
    {% endif %}
{% endspaceless %}
{% endblock %}
        
{% block form_widget_end %}
{% spaceless %}
    {% if type|default != 'hidden' and (prefix|default or suffix|default) %}
        {% if suffix|default %}
            {{ block('input_append') }}
        {% endif %}
        </div>
    {% endif %}
{% endspaceless %}
{% endblock %}

{% block collection_widget %}
{% spaceless %}
    {% if prototype is defined %}
        {% set prototype_markup = form_row(prototype) %}
        {% set data_prototype_name = form.vars.form.vars.prototype.vars.name|default('__name__') %}
        {% set data_prototype_label = form.vars.form.vars.prototype.vars.label|default('__name__label__') %}
        {% set prototypes_attr = {
            'data-prototype': prototype_markup,
            'data-prototype-name': data_prototype_name,
            'data-prototype-label': data_prototype_label
        }|merge(attr) %}
    {% endif %}

    {% if 'collection' in form.vars.block_prefixes and attr.class is defined %}
        {% set prototypes_attr = prototypes_attr|merge({'class': 'row ' ~ attr.class}) %}
    {% endif %}
        
    {% set prototypes_attr = prototypes_attr|merge({'id': 'collection' ~ id ~ '_form_group', 'class': 'form-group collection-items ' ~ id ~ '_form_group'}) %}

    <div {% for attrname,attrvalue in prototypes_attr %} {{attrname}}="{{attrvalue}}"{% endfor %}>
        {% if form.vars.value|length == 0 and prototype is defined %}
            {% for name in prototype_names %}
                {{ prototype_markup|replace({'__name__': name})|raw }}
            {% endfor %}
        {% endif %}
        {{ block('form_widget') }}
    </div>
{% endspaceless %}
{% endblock collection_widget %}

{% block choice_widget_expanded %}
{% spaceless %}
    {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' ' ~ multiple ? 'checkbox' : 'radio')}) %}
    {% if expanded %}
        {% set attr = attr|merge({'class': attr.class|default(layout.horizontalInputWrapperClass)}) %}
    {% endif %}
    {% for child in form %}
        <div class="{{ multiple ? 'checkbox' : 'radio' }}">
            <label{% for attrname, attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>
                {{ form_widget(child) }}
                {{ child.vars.label|trans({}, translation_domain) }}
            </label>
        </div>
    {% endfor %}
    {{ block('form_message') }}
{% endspaceless %}
{% endblock choice_widget_expanded %}

{% block checkbox_widget %}
{% spaceless %}
{% if label is not sameas(false) and label is empty %}
    {% set label = name|humanize %}
{% endif %}
{% if form.parent != null and 'choice' not in form.parent.vars.block_prefixes %}
    <div class="checkbox">
{% endif %}

{% if form.parent != null and 'choice' not in form.parent.vars.block_prefixes %}
    <label>
{% endif %}
        <input type="checkbox" {{ block('widget_attributes') }}{% if value is defined %} value="{{ value }}"{% endif %}{% if checked %} checked="checked"{% endif %}/>
{% if form.parent != null and 'choice' not in form.parent.vars.block_prefixes %}
    {% if widget_checkbox_label in ['both', 'widget'] %}
        {{ label|trans({}, translation_domain) }}
    </label>
    {% endif %}
{% endif %}
{% if form.parent != null and 'choice' not in form.parent.vars.block_prefixes %}
    </div>
    {{ block('form_message') }}
{% endif %}
{% endspaceless %}
{% endblock checkbox_widget %}

{% block date_widget %}
    {% spaceless %}
    {% if widget == 'single_text' %}
        {{ block('form_widget_simple') }}
    {% else %}
        {{ date_pattern|replace({
            '{{ year }}': inline(form_widget(form.year)),
            '{{ month }}': inline(form_widget(form.month)),
            '{{ day }}': inline(form_widget(form.day)),
        })|raw }}
        {{ block('form_message') }}
    {% endif %}
    {% endspaceless %}
{% endblock date_widget %}

{% block time_widget %}
{% spaceless %}
{% if widget == 'single_text' %}
    {{ block('form_widget_simple') }}
{% else %}
    {{ inline(form_widget(form.hour)) }}
    {{ inline(form_widget(form.minute)) }}
    {% if with_seconds %}
        :{{ inline(form_widget(form.second)) }}
    {% endif %}
    {{ block('form_message') }}
{% endif %}
{% endspaceless %}
{% endblock time_widget %}

{% block datetime_widget %}
{% spaceless %}
    {% if widget == 'single_text' %}
        {{ block('form_widget_simple') }}
    {% else %}
        {% set attr = attr|merge({'class': attr.class|default('')}) %}
        <div {{ block('widget_container_attributes') }}>
            {{ form_errors(form.date) }}
            {{ form_errors(form.time) }}
            {{ inline_group(form_widget(form.date, {'attr': {'class': attr.widget_class|default('')}})) }}
            {{ inline_group(form_widget(form.time, {'attr': {'class': attr.widget_class|default('')}})) }}
            {{ block('form_message') }}
        </div>
    {% endif %}
{% endspaceless %}
{% endblock datetime_widget %}

{% block percent_widget %}
{% spaceless %}
    {% set suffix = suffix|default('%') %}
    {{ block('form_widget_simple') }}
{% endspaceless %}
{% endblock percent_widget %}
        
{% block money_widget %}
{% spaceless %}
    {% set prefix = prefix|default(money_pattern|replace({'{{ widget }}':''})) %}
    {{ block('form_widget_simple') }}
{% endspaceless %}
{% endblock money_widget %}

{# Labels #}

{% block form_label %}
{% spaceless %}
    {% if label is not sameas(false) %}
        {% if not compound %}
            {% set label_attr = label_attr|merge({'for': id}) %}
        {% endif %}

        {# if layout is horizontal, add control-label class and column width class #}
        {% if layout.formLayout == 'horizontal' %}
            {% set label_attr = label_attr|merge({'class': 'control-label ' ~ label_attr_class|default('') ~ layout.horizontalLabelClass }) %}

        {# if layout is inline, we don't want to show the label #}
        {% elseif layout.formLayout == 'inline' %}
            {% set label_attr = label_attr|merge({'class': 'sr-only ' ~ label_attr_class|default('')}) %}
        {% endif %}

        {% if required %}
            {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' required')|trim}) %}
        {% endif %}
        {% if label is empty %}
            {% set label = name|humanize %}
        {% endif %}
        <label{% for attrname, attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>
            {{ label|trans({}, translation_domain) }}
        </label>
    {% endif %}
{% endspaceless %}
{% endblock form_label %}

{% block form_message %}
{% spaceless %}
    {% if type|default != 'hidden' %}
        {{ form_errors(form) }}
        {{ block('form_help') }}
    {% endif %}
{% endspaceless %}
{% endblock form_message %}

{# Render prepend if prefix is specified #}
{% block input_prepend %}
{% spaceless %}
    <span class="input-group-addon">{{ prefix|trans({}, translation_domain)|raw }}</span>
{% endspaceless %}
{% endblock %}

{# Render append if prefix is specified #}
{% block input_append %}
{% spaceless %}
    <span class="input-group-addon">{{ suffix|trans({}, translation_domain)|raw }}</span>
{% endspaceless %}
{% endblock %}
    
{# Render help-block if help is specified #}
{% block form_help %}
{% spaceless %}
    {% if help %}
        <span class="help-block">{{ help|trans({}, translation_domain)|raw }}</span>
    {%endif %}
{% endspaceless %}
{% endblock form_help %}
